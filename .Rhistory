mean_monthly_bikes = mean(bikes_hired)
)
#Joining this data with overall average
bikes_with_avg <- left_join(bikes_monthly_mean, monthly_avg, on='month')
#Calculating excess rentals by comparing data with overall average
bikes_with_avg <- bikes_with_avg %>%
mutate(excess_rentals = mean_monthly_bikes - mean_bikes_overall)
#Defining an ordered list of months
month_labs <- c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")
#Converting month to factor
bikes_with_avg$month <- factor(bikes_with_avg$month, label = month_labs, ordered = TRUE)
bikes_with_avg_new <- bikes_with_avg %>%
mutate(up = ifelse(excess_rentals > 0, as.numeric(excess_rentals), 0), down = ifelse(excess_rentals < 0, as.numeric(excess_rentals), 0)) %>%
arrange(year,month)
bikes_with_avg_new %>%
ggplot(bikes_with_avg_new, aes(x = month)) +
geom_line(aes(group = 1, y = mean_bikes_overall), color = "blue") +
geom_line(aes(group = 1, y = mean_monthly_bikes), color="black", alpha=0.6) +
geom_ribbon(aes(group = 1, ymin = mean_bikes_overall, ymax = mean_bikes_overall + up), fill="#7DCD85", alpha=0.4) +
geom_ribbon(aes(group = 1, ymin = mean_bikes_overall, ymax = mean_bikes_overall + down), fill="#CB454A", alpha=0.4)+
facet_wrap(~year) +
theme_bw()+
labs(
title = "Monthly changes in TfL bike rentals",
subtitle = "Change from monthly average shown in blue\nand calculated between 2016-2019",
y="Bike rentals",
x="",
caption = "Source:Tfl, London Data Store"
)
#create first required plot
#create variables "up" and "down" denoting the shifts from the average
bikes_with_avg_new<-bikes_with_avg %>%
mutate(up=ifelse(excess_rentals>0,as.numeric(excess_rentals),0),down=ifelse(excess_rentals<0,as.numeric(excess_rentals),0)) %>%
arrange(year,month)
bikes_with_avg_new
#plot diagram
ggplot(bikes_with_avg_new, aes(x = month)) +
geom_line(aes(group=1, y = mean_bikes_overall),color = "blue") +
geom_line(aes(group=1, y = mean_monthly_bikes),color="black",alpha=0.6)+
#include lines that show shifts from mean
geom_ribbon(aes(group=1, ymin = mean_bikes_overall, ymax = mean_bikes_overall+up),fill="#7DCD85",alpha=0.4)+
geom_ribbon(aes(group=1, ymin = mean_bikes_overall, ymax = mean_bikes_overall+down),fill="#CB454A",alpha=0.4)+
#facet wrap by year
facet_wrap(~year) +
#change theme and legends
theme_bw()+labs(
title = "Monthly changes in TfL bike rentals",
subtitle = "Change from monthly average shown in blue\nand calculated between 2016-2019 ",
y="Bike rentals",
x="",
caption = "Source:Tfl, London Data Store"
)
#create dataframes for second required graph
#change certain dates (some days of the week at the end or the start of the year are counted towards the wrong year)
bike1<-bike %>%
mutate(month=as.numeric(month)) %>%
mutate(year=ifelse(month==12 & week==1, year+1,year)) %>%
mutate(year=ifelse(month==1 & week==53, year-1,year))
#calculate weekly averages
weekly_avg <- bike1 %>%
filter(year %in% c(2016,2017,2018,2019)) %>%
group_by(week) %>%
summarise(
mean_weekly_overall = mean(bikes_hired)
)
weekly_avg
#edit for week 53(some days are counted towards the wrong year)
weekly_avg_53 <- bike1 %>%
filter(year == 2015 & week==53) %>%
group_by(week) %>%
summarise(
mean_weekly_overall = mean(bikes_hired)
)
#combine the dataframes to create final dataframe
weekly_avg_new<-full_join(weekly_avg,weekly_avg_53,on='week')
weekly_avg_new
#create dataframes for second required graph
#change certain dates (some days of the week at the end or the start of the year are counted towards the wrong year)
bike1<-bike %>%
mutate(month=as.numeric(month)) %>%
mutate(year=ifelse(month==12 & week==1, year+1,year)) %>%
mutate(year=ifelse(month==1 & week==53, year-1,year))
#calculate weekly averages
weekly_avg <- bike1 %>%
filter(year %in% c(2016,2017,2018,2019)) %>%
group_by(week) %>%
summarise(
mean_weekly_overall = mean(bikes_hired)
)
weekly_avg
#edit for week 53(some days are counted towards the wrong year)
weekly_avg_53 <- bike1 %>%
filter(year == 2015 & week==53) %>%
group_by(week) %>%
summarise(
mean_weekly_overall = mean(bikes_hired)
)
#combine the dataframes to create final dataframe
weekly_avg_new<-full_join(weekly_avg,weekly_avg_53,on='week')
weekly_avg_new
bikes_weekly_mean <- bike1 %>%
filter(year %in% c(2016,2017,2018,2019,2020,2021)) %>%
group_by(year,week) %>%
summarize(
mean_weekly_bikes = mean(bikes_hired)
)
bikes_weekly_mean
bikes_week_avg <- left_join(bikes_weekly_mean, weekly_avg_new, on='week')
bikes_week_avg <- bikes_week_avg %>%
mutate(excess_weekly_rentals = mean_weekly_bikes - mean_weekly_overall)
#mutate to include "up" and "down" variables (similarly as above)
bikes_week_avg_new<-bikes_week_avg %>%
mutate(excess_weekly_rentals_percent=(excess_weekly_rentals/mean_weekly_overall)*100,
up=ifelse(excess_weekly_rentals>0,
as.numeric(excess_weekly_rentals/mean_weekly_overall)*100,
0),
down=ifelse(excess_weekly_rentals<0,
as.numeric(excess_weekly_rentals/mean_weekly_overall)*100
,0)
) %>%
arrange(year,week)
bikes_week_avg_new
#plot second graph
ggplot(bikes_week_avg_new, aes(x = week)) +
geom_line(aes(group=1, y = excess_weekly_rentals_percent),color="black",alpha=0.3) +
#include areas denoting shifts from the average
geom_ribbon(aes(group=1, ymin = 0, ymax = up),fill="#7DCD85",alpha=0.4)+
geom_ribbon(aes(group=1, ymin = 0, ymax = down),fill="#CB454A",alpha=0.4)+
#facet wrap by year
facet_wrap(~year) +
#edit scales
scale_y_continuous(breaks = c(-50, 0, 50,100),
labels = function(x) paste0(x, "%"),limits = c(-50,100))+
scale_x_continuous(breaks = seq(0,53,by=13),
limits = c(1,53))+
#edit legends theme and appearance of graph
theme_bw()+
annotate("rect", xmin=14, xmax=26, ymin=-Inf, ymax=Inf, alpha=0.4, fill="grey")+
annotate("rect", xmin=40, xmax=52, ymin=-Inf, ymax=Inf, alpha=0.4, fill="grey")+
#include lines at axis
geom_rug(data=bikes_week_avg_new[bikes_week_avg_new$up>0,],sides="b",colour="#7DCD85")+
geom_rug(data=bikes_week_avg_new[bikes_week_avg_new$down<0,],sides="b",colour="#CB454A")+
#change legends
labs(
title = "Weekly changes in TfL bike rentals",
subtitle = "% Change from weekly averages\ncalculated between 2016-2019 ",
y="",
x="week",
caption = "Source:Tfl, London Data Store"
)
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
tidy=FALSE,     # display code as typed
size="small")   # slightly smaller font for code
options(digits = 3)
# default figure size
knitr::opts_chunk$set(
fig.width=6.75,
fig.height=6.75,
fig.align = "center"
)
library(tidyverse)  # Load ggplot2, dplyr, and all the other tidyverse packages
library(mosaic)
library(ggthemes)
library(lubridate)
library(here)
library(skimr)
library(janitor)
library(httr)
library(readxl)
library(vroom)
#URL of dataset
url <- "https://data.london.gov.uk/download/number-bicycle-hires/ac29363e-e0cb-47cc-a97a-e216d900a6b0/tfl-daily-cycle-hires.xlsx"
#Download TFL data to temporary file
httr::GET(url, write_disk(bike.temp <- tempfile(fileext = ".xlsx")))
#Use read_excel to read it as dataframe
bike0 <- read_excel(bike.temp,
sheet = "Data",
range = cell_cols("A:B"))
#Change dates to get year, month, and week
bike <- bike0 %>%
clean_names() %>%
rename (bikes_hired = number_of_bicycle_hires) %>%
mutate (year = year(day),
month = lubridate::month(day, label = TRUE),
week = isoweek(day))
bike %>%
#Filtering for years 2016-19
filter(year %in% c(2016,2017,2018,2019)) %>%
#Displaying summary statistics
favstats(bikes_hired~month,data=bike_new)
monthly_avg <- bike %>%
#Filtering for years 2016-19
filter(year %in% c(2016,2017,2018,2019)) %>%
#Grouping by month
group_by(month) %>%
#Calculating mean bikes hired for each month
summarise(
mean_bikes_overall = mean(bikes_hired)
)
monthly_avg
bikes_monthly_mean <- bike %>%
#Filtering for recent years
filter(year %in% c(2016,2017,2018,2019,2020,2021)) %>%
#Grouping by month and year
group_by(month, year) %>%
#Calculating average bikes hired for each month
summarize(
mean_monthly_bikes = mean(bikes_hired)
)
#Joining this data with overall average
bikes_with_avg <- left_join(bikes_monthly_mean, monthly_avg, on='month')
#Calculating excess rentals by comparing data with overall average
bikes_with_avg <- bikes_with_avg %>%
mutate(excess_rentals = mean_monthly_bikes - mean_bikes_overall)
#Defining an ordered list of months
month_labs <- c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")
#Converting month to factor
bikes_with_avg$month <- factor(bikes_with_avg$month, label = month_labs, ordered = TRUE)
#Create variables "up" and "down" denoting the shifts from the average
bikes_with_avg_new<-bikes_with_avg %>%
mutate(up = ifelse(excess_rentals > 0, as.numeric(excess_rentals), 0), down = ifelse(excess_rentals < 0, as.numeric(excess_rentals), 0)) %>%
arrange(year,month)
bikes_with_avg_new
#Line graph for mean bikes overall and mean monthly bikes
ggplot(bikes_with_avg_new, aes(x = month)) +
geom_line(aes(group = 1, y = mean_bikes_overall), color = "blue") +
geom_line(aes(group = 1, y = mean_monthly_bikes), color = "black", alpha = 0.6) +
#Including lines and filling colours to show shift from mean
geom_ribbon(aes(group = 1, ymin = mean_bikes_overall, ymax = mean_bikes_overall + up), fill = "#7DCD85", alpha = 0.4) +
geom_ribbon(aes(group = 1, ymin = mean_bikes_overall, ymax = mean_bikes_overall + down),fill = "#CB454A",alpha = 0.4)+
#Facet wrap by year
facet_wrap(~year) +
#Using black and white theme
theme_bw() +
#Adding title and axes labels
labs(
title = "Monthly changes in TfL bike rentals",
subtitle = "Change from monthly average shown in blue\nand calculated between 2016-2019 ",
y = "Bike rentals",
x = "",
caption = "Source:Tfl, London Data Store"
)
#Line graph for mean bikes overall and mean monthly bikes
ggplot(bikes_with_avg_new, aes(x = month)) +
geom_line(aes(group = 1, y = mean_bikes_overall), color = "blue") +
geom_line(aes(group = 1, y = mean_monthly_bikes), color = "black", alpha = 0.6) +
#Including lines and filling colours to show shift from mean
geom_ribbon(aes(group = 1, ymin = mean_bikes_overall, ymax = mean_bikes_overall + up), fill = "#7DCD85", alpha = 0.4) +
geom_ribbon(aes(group = 1, ymin = mean_bikes_overall, ymax = mean_bikes_overall + down),fill = "#CB454A",alpha = 0.4)+
#Facet wrap by year
facet_wrap(~year) +
#Using black and white theme
theme_bw() +
#Adding title and axes labels
labs(
title = "Monthly changes in TfL bike rentals",
subtitle = "Change from monthly average shown in blue\nand calculated between 2016-2019 ",
y = "Bike rentals",
x = "",
caption = "Source:Tfl, London Data Store"
)
#Line graph for mean bikes overall and mean monthly bikes
ggplot(bikes_with_avg_new, aes(x = month)) +
geom_line(aes(group = 1, y = mean_bikes_overall), color = "blue") +
geom_line(aes(group = 1, y = mean_monthly_bikes), color = "black", alpha = 0.6) +
#Including lines and filling colours to show shift from mean
geom_ribbon(aes(group = 1, ymin = mean_bikes_overall, ymax = mean_bikes_overall + up), fill = "#7DCD85", alpha = 0.4) +
geom_ribbon(aes(group = 1, ymin = mean_bikes_overall, ymax = mean_bikes_overall + down),fill = "#CB454A",alpha = 0.4)+
#Facet wrap by year
facet_wrap(~year) +
#Using black and white theme
theme_bw() +
#Adding title and axes labels
labs(
title = "Monthly changes in TfL bike rentals",
subtitle = "Change from monthly average shown in blue\nand calculated between 2016-2019 ",
y = "Bike rentals",
x = "",
caption = "Source:Tfl, London Data Store"
)
#Change certain dates (as some days of the week at the end or the start of the year are counted towards the wrong year)
bike1 <- bike %>%
#Converting month to numeric
mutate(month=as.numeric(month)) %>%
#Fixing the edge cases
mutate(year = ifelse(month == 12 & week == 1, year + 1, year)) %>%
mutate(year = ifelse(month == 1 & week == 53, year-  1, year))
#Calculate weekly averages
weekly_avg <- bike1 %>%
#Filtering for years 2016-19
filter(year %in% c(2016,2017,2018,2019)) %>%
#Grouping by week
group_by(week) %>%
#Calculating average bikes hired weekly
summarise(
mean_weekly_overall = mean(bikes_hired)
)
weekly_avg
bikes_weekly_mean <- bike1 %>%
#Filtering for recent years
filter(year %in% c(2016,2017,2018,2019,2020,2021)) %>%
#Grouping by year and week
group_by(year,week) %>%
#Calculating average bikes hired for each week
summarize(
mean_weekly_bikes = mean(bikes_hired)
)
bikes_weekly_mean
#Joining recent average with overall average
bikes_week_avg <- left_join(bikes_weekly_mean, weekly_avg, on='week')
#Calculating excess weekly rentals
bikes_week_avg <- bikes_week_avg %>%
mutate(excess_weekly_rentals = mean_weekly_bikes - mean_weekly_overall)
#Defining variables for graph
bikes_week_avg_new <- bikes_week_avg %>%
#Calculating excess weekly rentals
mutate(excess_weekly_rentals_percent = (excess_weekly_rentals / mean_weekly_overall) * 100,
#Defining up and down variables to determine fill
up = ifelse(excess_weekly_rentals > 0, as.numeric(excess_weekly_rentals / mean_weekly_overall) * 100, 0),
down = ifelse(excess_weekly_rentals < 0, as.numeric(excess_weekly_rentals / mean_weekly_overall) * 100, 0)) %>%
#Sorting by year and week
arrange(year,week)
bikes_week_avg_new
#Line plot for excess weekly percent
ggplot(bikes_week_avg_new, aes(x = week)) +
geom_line(aes(group=1, y = excess_weekly_rentals_percent), color = "black", alpha = 0.3) +
#Defining areas denoting shifts from the average
geom_ribbon(aes(group = 1, ymin = 0, ymax = up), fill = "#7DCD85", alpha = 0.4) +
geom_ribbon(aes(group = 1, ymin = 0, ymax = down), fill = "#CB454A", alpha = 0.4) +
#Facet wrap by year
facet_wrap(~year) +
#Defining scales
scale_y_continuous(breaks = c(-50, 0, 50,100), labels = function(x) paste0(x, "%"), limits = c(-50,100)) +
scale_x_continuous(breaks = seq(0,53,by=13), limits = c(1,53)) +
#Using black and white theme
theme_bw() +
#Using grey areas to shade 2nd and 4th quarters of the year
annotate("rect", xmin=14, xmax=26, ymin=-Inf, ymax=Inf, alpha=0.4, fill="grey") +
annotate("rect", xmin=40, xmax=52, ymin=-Inf, ymax=Inf, alpha=0.4, fill="grey") +
#Including lines at axis
geom_rug(data = bikes_week_avg_new[bikes_week_avg_new$up > 0,], sides = "b", colour = "#7DCD85") +
geom_rug(data = bikes_week_avg_new[bikes_week_avg_new$down < 0, ], sides = "b", colour = "#CB454A") +
#Setting title and axes labels
labs(
title = "Weekly changes in TfL bike rentals",
subtitle = "% Change from weekly averages\ncalculated between 2016-2019 ",
y = "",
x = "Week",
caption = "Source:Tfl, London Data Store")
#Line plot for excess weekly percent
ggplot(bikes_week_avg_new %>% filter(year %in% c(2016,2017,2018,2019,2020,2021)),
aes(x = week)) +
geom_line(aes(group=1, y = excess_weekly_rentals_percent), color = "black", alpha = 0.3) +
#Defining areas denoting shifts from the average
geom_ribbon(aes(group = 1, ymin = 0, ymax = up), fill = "#7DCD85", alpha = 0.4) +
geom_ribbon(aes(group = 1, ymin = 0, ymax = down), fill = "#CB454A", alpha = 0.4) +
#Facet wrap by year
facet_wrap(~year) +
#Defining scales
scale_y_continuous(breaks = c(-50, 0, 50,100), labels = function(x) paste0(x, "%"), limits = c(-50,100)) +
scale_x_continuous(breaks = seq(0,53,by=13), limits = c(1,53)) +
#Using black and white theme
theme_bw() +
#Using grey areas to shade 2nd and 4th quarters of the year
annotate("rect", xmin=14, xmax=26, ymin=-Inf, ymax=Inf, alpha=0.4, fill="grey") +
annotate("rect", xmin=40, xmax=52, ymin=-Inf, ymax=Inf, alpha=0.4, fill="grey") +
#Including lines at axis
geom_rug(data = bikes_week_avg_new[bikes_week_avg_new$up > 0,], sides = "b", colour = "#7DCD85") +
geom_rug(data = bikes_week_avg_new[bikes_week_avg_new$down < 0, ], sides = "b", colour = "#CB454A") +
#Setting title and axes labels
labs(
title = "Weekly changes in TfL bike rentals",
subtitle = "% Change from weekly averages\ncalculated between 2016-2019 ",
y = "",
x = "Week",
caption = "Source:Tfl, London Data Store")
View(bikes_week_avg_new)
skim(bikes_week_avg_new)
#Line plot for excess weekly percent
ggplot(bikes_week_avg_new %>% drop_na(), aes(x = week)) +
geom_line(aes(group=1, y = excess_weekly_rentals_percent), color = "black", alpha = 0.3) +
#Defining areas denoting shifts from the average
geom_ribbon(aes(group = 1, ymin = 0, ymax = up), fill = "#7DCD85", alpha = 0.4) +
geom_ribbon(aes(group = 1, ymin = 0, ymax = down), fill = "#CB454A", alpha = 0.4) +
#Facet wrap by year
facet_wrap(~year) +
#Defining scales
scale_y_continuous(breaks = c(-50, 0, 50,100), labels = function(x) paste0(x, "%"), limits = c(-50,100)) +
scale_x_continuous(breaks = seq(0,53,by=13), limits = c(1,53)) +
#Using black and white theme
theme_bw() +
#Using grey areas to shade 2nd and 4th quarters of the year
annotate("rect", xmin=14, xmax=26, ymin=-Inf, ymax=Inf, alpha=0.4, fill="grey") +
annotate("rect", xmin=40, xmax=52, ymin=-Inf, ymax=Inf, alpha=0.4, fill="grey") +
#Including lines at axis
geom_rug(data = bikes_week_avg_new[bikes_week_avg_new$up > 0,], sides = "b", colour = "#7DCD85") +
geom_rug(data = bikes_week_avg_new[bikes_week_avg_new$down < 0, ], sides = "b", colour = "#CB454A") +
#Setting title and axes labels
labs(
title = "Weekly changes in TfL bike rentals",
subtitle = "% Change from weekly averages\ncalculated between 2016-2019 ",
y = "",
x = "Week",
caption = "Source:Tfl, London Data Store")
skim(bikes_week_avg_new %>% drop_na())
bikes_week_avg_new <- bikes_week_avg_new %>% drop_na()
skim(bikes_week_avg_new)
#Line plot for excess weekly percent
ggplot(bikes_week_avg_new, aes(x = week)) +
geom_line(aes(group=1, y = excess_weekly_rentals_percent), color = "black", alpha = 0.3) +
#Defining areas denoting shifts from the average
geom_ribbon(aes(group = 1, ymin = 0, ymax = up), fill = "#7DCD85", alpha = 0.4) +
geom_ribbon(aes(group = 1, ymin = 0, ymax = down), fill = "#CB454A", alpha = 0.4) +
#Facet wrap by year
facet_wrap(~year) +
#Defining scales
scale_y_continuous(breaks = c(-50, 0, 50,100), labels = function(x) paste0(x, "%"), limits = c(-50,100)) +
scale_x_continuous(breaks = seq(0,53,by=13), limits = c(1,53)) +
#Using black and white theme
theme_bw() +
#Using grey areas to shade 2nd and 4th quarters of the year
annotate("rect", xmin=14, xmax=26, ymin=-Inf, ymax=Inf, alpha=0.4, fill="grey") +
annotate("rect", xmin=40, xmax=52, ymin=-Inf, ymax=Inf, alpha=0.4, fill="grey") +
#Including lines at axis
geom_rug(data = bikes_week_avg_new[bikes_week_avg_new$up > 0,], sides = "b", colour = "#7DCD85") +
geom_rug(data = bikes_week_avg_new[bikes_week_avg_new$down < 0, ], sides = "b", colour = "#CB454A") +
#Setting title and axes labels
labs(
title = "Weekly changes in TfL bike rentals",
subtitle = "% Change from weekly averages\ncalculated between 2016-2019 ",
y = "",
x = "Week",
caption = "Source:Tfl, London Data Store")
#Line plot for excess weekly percent
ggplot(bikes_week_avg_new, aes(x = week)) +
geom_line(aes(group=1, y = excess_weekly_rentals_percent), color = "black", alpha = 0.3) +
#Defining areas denoting shifts from the average
geom_ribbon(aes(group = 1, ymin = 0, ymax = up), fill = "#7DCD85", alpha = 0.4) +
geom_ribbon(aes(group = 1, ymin = 0, ymax = down), fill = "#CB454A", alpha = 0.4) +
#Facet wrap by year
facet_wrap(~year) +
#Defining scales
scale_y_continuous(breaks = c(-50, 0, 50,100), labels = function(x) paste0(x, "%"), limits = c(-50,100)) +
scale_x_continuous(breaks = seq(0,53,by=13), limits = c(1,53)) +
#Using black and white theme
theme_bw() +
#Using grey areas to shade 2nd and 4th quarters of the year
annotate("rect", xmin=14, xmax=26, ymin=-Inf, ymax=Inf, alpha=0.4, fill="grey") +
annotate("rect", xmin=40, xmax=52, ymin=-Inf, ymax=Inf, alpha=0.4, fill="grey") +
#Including lines at axis
geom_rug(data = bikes_week_avg_new[bikes_week_avg_new$up > 0,], sides = "b", colour = "#7DCD85") +
geom_rug(data = bikes_week_avg_new[bikes_week_avg_new$down < 0, ], sides = "b", colour = "#CB454A") +
#Setting title and axes labels
labs(
title = "Weekly changes in TfL bike rentals",
subtitle = "% Change from weekly averages\ncalculated between 2016-2019 ",
y = "",
x = "Week",
caption = "Source:Tfl, London Data Store")
#Line plot for excess weekly percent
ggplot(bikes_week_avg_new, aes(x = week)) +
geom_line(aes(group=1, y = excess_weekly_rentals_percent), color = "black", alpha = 0.3) +
#Defining areas denoting shifts from the average
geom_ribbon(aes(group = 1, ymin = 0, ymax = up), fill = "#7DCD85", alpha = 0.4) +
geom_ribbon(aes(group = 1, ymin = 0, ymax = down), fill = "#CB454A", alpha = 0.4) +
#Facet wrap by year
facet_wrap(~year) +
#Defining scales
scale_y_continuous(breaks = c(-50, 0, 50,100), labels = function(x) paste0(x, "%"), limits = c(-50,100)) +
scale_x_continuous(breaks = seq(0,53,by=13), limits = c(1,53)) +
#Using black and white theme
theme_bw() +
#Using grey areas to shade 2nd and 4th quarters of the year
annotate("rect", xmin=14, xmax=26, ymin=-Inf, ymax=Inf, alpha=0.4, fill="grey") +
annotate("rect", xmin=40, xmax=52, ymin=-Inf, ymax=Inf, alpha=0.4, fill="grey") +
#Including lines at axis
geom_rug(data = bikes_week_avg_new[bikes_week_avg_new$up > 0,], sides = "b", colour = "#7DCD85") +
geom_rug(data = bikes_week_avg_new[bikes_week_avg_new$down < 0, ], sides = "b", colour = "#CB454A") +
#Setting title and axes labels
labs(
title = "Weekly changes in TfL bike rentals",
subtitle = "% Change from weekly averages\ncalculated between 2016-2019 ",
y = "",
x = "Week",
caption = "Source:Tfl, London Data Store")
library(blogdown)
serve_site()
serve_stop()
stop_serve()
blogdown::stop_server()
serve_site()
stop_serve()
blogdown::stop_server()
serve_site()
blogdown::serve_site()
blogdown::server_stop()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
